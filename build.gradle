buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.10"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.bordozer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
    hibernateVersion = '5.2.12.Final'
    assertjVersion = '3.8.0'
    mockitoVersion = '2.11.0'
    mapstructVersion = '1.2.0.Final'
    guavaVersion = '21.0'
    reactorVersion = '3.1.1.RELEASE'
    immutablesVersion = '2.5.6'
}

apply plugin: 'net.ltgt.apt'

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')

//  compile group: 'org.hibernate', name: 'hibernate-core', version: hibernateVersion
//	compile('org.springframework.boot:spring-boot-starter-data-jpa')

    compile group: 'io.projectreactor', name: 'reactor-core', version: reactorVersion
    compile group: 'io.reactivex', name: 'rxjava-reactive-streams', version: '1.2.1'

    compile group: 'org.glassfish.jaxb', name: 'jaxb-xjc', version: '2.3.0'
    compile group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.0'

    compile group: 'org.mapstruct', name: 'mapstruct-jdk8', version: mapstructVersion
    compile group: 'org.mapstruct', name: 'mapstruct-processor', version: mapstructVersion

    compileOnly('org.projectlombok:lombok:1.16.18')
    compile group: 'org.immutables', name: 'value', version: immutablesVersion
    compile group: 'com.google.guava', name: 'guava', version: guavaVersion

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile group: 'org.assertj', name: 'assertj-core', version: assertjVersion
	testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion

}

//if (project.plugins.hasPlugin('net.ltgt.apt')) {
    sourceSets {
        main {
            java.srcDir "${buildDir}/generated/source/apt/main"
        }
    }

    compileJava.dependsOn clean
//}
